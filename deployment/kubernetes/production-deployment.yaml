# Production-optimized Kubernetes Deployment with Enhanced Security and Monitoring
# This deployment is optimized for production workloads with enhanced resource management

apiVersion: apps/v1
kind: Deployment
metadata:
  name: graphrag-toolkit-prod
  namespace: production
  labels:
    app: graphrag-toolkit
    component: application
    environment: production
    version: v1.0.0
spec:
  replicas: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  selector:
    matchLabels:
      app: graphrag-toolkit
      component: application
      environment: production
  template:
    metadata:
      labels:
        app: graphrag-toolkit
        component: application
        environment: production
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
        # Enhanced security annotations
        container.apparmor.security.beta.kubernetes.io/graphrag-toolkit: runtime/default
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
    spec:
      serviceAccountName: ucbl-logger-service-account
      automountServiceAccountToken: true
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: graphrag-toolkit
        image: graphrag-toolkit:v1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        - name: health
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        # Service identification
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef:
              name: ucbl-logger-config-production
              key: service_name
        - name: ENVIRONMENT
          value: "production"
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        
        # UCBLLogger production configuration
        - name: UCBL_LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: ucbl-logger-config-production
              key: log_level
        - name: UCBL_ENABLE_TRACING
          valueFrom:
            configMapKeyRef:
              name: ucbl-logger-config-production
              key: enable_tracing
        - name: UCBL_ENABLE_OPENTELEMETRY
          valueFrom:
            configMapKeyRef:
              name: ucbl-logger-config-production
              key: enable_opentelemetry
        - name: UCBL_ENABLE_PERFORMANCE_MONITORING
          valueFrom:
            configMapKeyRef:
              name: ucbl-logger-config-production
              key: enable_performance_monitoring
        - name: UCBL_PERFORMANCE_COLLECTION_INTERVAL
          valueFrom:
            configMapKeyRef:
              name: ucbl-logger-config-production
              key: performance_collection_interval
        - name: UCBL_ENABLE_SAMPLING
          valueFrom:
            configMapKeyRef:
              name: ucbl-logger-config-production
              key: enable_sampling
        - name: UCBL_DEFAULT_SAMPLING_RATE
          valueFrom:
            configMapKeyRef:
              name: ucbl-logger-config-production
              key: default_sampling_rate
        - name: UCBL_ENABLE_CLOUDWATCH
          valueFrom:
            configMapKeyRef:
              name: ucbl-logger-config-production
              key: enable_cloudwatch
        - name: UCBL_CLOUDWATCH_LOG_GROUP
          valueFrom:
            configMapKeyRef:
              name: ucbl-logger-config-production
              key: cloudwatch_log_group
        - name: UCBL_CLOUDWATCH_REGION
          valueFrom:
            configMapKeyRef:
              name: ucbl-logger-config-production
              key: cloudwatch_region
        - name: UCBL_ENABLE_COMPRESSION
          valueFrom:
            configMapKeyRef:
              name: ucbl-logger-config-production
              key: enable_compression
        - name: UCBL_BATCH_SIZE
          valueFrom:
            configMapKeyRef:
              name: ucbl-logger-config-production
              key: batch_size
        
        # AWS configuration (use IRSA in production)
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: ucbl-logger-config-production
              key: cloudwatch_region
        - name: AWS_ROLE_ARN
          value: "arn:aws:iam::ACCOUNT_ID:role/GraphRAGToolkitRole"
        
        resources:
          requests:
            cpu: 1000m
            memory: 2Gi
            ephemeral-storage: 1Gi
          limits:
            cpu: 4000m
            memory: 8Gi
            ephemeral-storage: 5Gi
        
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
        
        livenessProbe:
          httpGet:
            path: /health
            port: health
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        
        readinessProbe:
          httpGet:
            path: /health
            port: health
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        
        startupProbe:
          httpGet:
            path: /health
            port: health
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
          successThreshold: 1
        
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
        - name: logs
          mountPath: /app/logs
        - name: config
          mountPath: /app/config
          readOnly: true
      
      volumes:
      - name: tmp
        emptyDir:
          sizeLimit: 1Gi
      - name: cache
        emptyDir:
          sizeLimit: 2Gi
      - name: logs
        emptyDir:
          sizeLimit: 5Gi
      - name: config
        configMap:
          name: ucbl-logger-config-production
          defaultMode: 0444
      
      # Enhanced scheduling and placement
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - graphrag-toolkit
              - key: environment
                operator: In
                values:
                - production
            topologyKey: kubernetes.io/hostname
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node-type
                operator: In
                values:
                - compute-optimized
      
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/memory-pressure"
        operator: "Exists"
        effect: "NoSchedule"
      
      # DNS and networking configuration
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
        - name: ndots
          value: "2"
        - name: edns0
      
      # Termination settings
      terminationGracePeriodSeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  name: graphrag-toolkit-service-prod
  namespace: production
  labels:
    app: graphrag-toolkit
    component: application
    environment: production
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: https
    port: 443
    targetPort: http
    protocol: TCP
  selector:
    app: graphrag-toolkit
    component: application
    environment: production
---
# Internal service for health checks and metrics
apiVersion: v1
kind: Service
metadata:
  name: graphrag-toolkit-internal-prod
  namespace: production
  labels:
    app: graphrag-toolkit
    component: application
    environment: production
    service-type: internal
spec:
  type: ClusterIP
  ports:
  - name: health
    port: 8080
    targetPort: health
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  selector:
    app: graphrag-toolkit
    component: application
    environment: production